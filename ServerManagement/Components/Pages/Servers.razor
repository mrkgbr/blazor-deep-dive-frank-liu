@page "/servers"

@rendermode InteractiveServer

<h3>Servers</h3>
<br />
<br />
<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (string city in cities)
        {
            <div class="col m-1">
                <div class="card @(selectedCity == city ? "border-primary" : string.Empty)">
                    <img src="@($"/images/{city}.png")" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary" @onclick="@(() => SelectCity(city))">@city</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<br />

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Server Servers" @bind-value="ServerFilter"
        @bind-value:event="oninput" />
    <button class="btn btn-outline-secondary" type="button" id="button-search" @onclick="HandleSearch">Search</button>
</div>
<br />

<ServerListComponent @rendermode="InteractiveServer"></ServerListComponent>

<p>
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>

@code {
    private List<string> cities = CitiesRepository.GetCities();
    private string selectedCity = "Toronto";
    private string _serverFiler = "";
    private string ServerFilter
    {
        get => _serverFiler;
        set
        {
            _serverFiler = value;
            @* servers = ServersRepository.SearchServers(_serverFiler); *@
        }
    }


    private void SelectCity(string cityName)
    {
        selectedCity = cityName;
        @* servers = ServersRepository.GetServersByCity(selectedCity); *@
    }

    private void HandleSearch()
    {
        @* servers = ServersRepository.SearchServers(ServerFilter); *@
        selectedCity = string.Empty;
    }
}
