@page "/servers/{id:int}"

@inject NavigationManager NavigationManager

<h3>Edit Server</h3>
<br />
<br />
@if (Server != null)
{
    <EditForm Model="Server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <InputNumber @bind-Value="Server.ServerId" hidden=""></InputNumber>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="Server.Name" class="form-control"></InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => Server.Name" />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="Server.City" class="form-control"></InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => Server.City" />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Online</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="Server.IsOnline" class="form-check-input"></InputCheckbox>
            </div>
        </div>
        <br />
        <button class="btn btn-primary" type="submit">Update</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    // FormName only needs when there is more than one form.
    [SupplyParameterFromForm(FormName = "formServer")]
    private Server? Server { get; set; }

    protected override void OnParametersSet()
    {
        Server ??= ServersRepository.GetServerById(Id);
    }

    private void Submit()
    {
        if (Server != null)
        {
            ServersRepository.UpdateServer(Server.ServerId, Server);
        }

        NavigationManager.NavigateTo("/servers");
    }
}
